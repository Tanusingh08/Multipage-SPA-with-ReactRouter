{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\12-adv-starting-project\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport HomePage from \"./pages/Home\";\nimport EventDetailPage, { loader as eventsDetailLoader, action as eventDeleteAction } from \"./pages/EventDetail\";\nimport NewEventPage, { action as newEventAction } from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRootLayout\";\nimport ErrorPageHandler from \"./pages/ErrorPage\";\nimport { action as manipulateEventAction } from './components/EventForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPageHandler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \"/events\",\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 36\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: \":eventId\",\n        id: 'event-detail',\n        loader: eventsDetailLoader,\n        children: [{\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 40\n          }, this),\n          action: eventDeleteAction\n        }, {\n          path: \"edit\",\n          element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 42\n          }, this),\n          action: manipulateEventAction\n        }]\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this),\n        action: manipulateEventAction\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","EventsPage","loader","eventsLoader","HomePage","EventDetailPage","eventsDetailLoader","action","eventDeleteAction","NewEventPage","newEventAction","EditEventPage","RootLayout","EventsRootLayout","ErrorPageHandler","manipulateEventAction","jsxDEV","_jsxDEV","Fragment","_Fragment","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/12-adv-starting-project/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport EventsPage,{ loader as eventsLoader} from \"./pages/Events\";\nimport HomePage from \"./pages/Home\";\nimport EventDetailPage,{loader as eventsDetailLoader, action as eventDeleteAction} from \"./pages/EventDetail\";\nimport NewEventPage, { action as newEventAction} from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRootLayout\";\nimport ErrorPageHandler from \"./pages/ErrorPage\";\nimport { action as manipulateEventAction }  from './components/EventForm.js';\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      errorElement:<ErrorPageHandler/>,\n      children: [\n        { index: true, element: <HomePage /> },\n        {\n          path: \"/events\",\n          element: <EventsRootLayout />,\n          children: [\n            { index:true, element: <EventsPage />, loader:eventsLoader},\n            {\n              path:\":eventId\",\n              id:'event-detail',\n              loader:eventsDetailLoader,\n              children:[\n                { index:true, element: <EventDetailPage />, action : eventDeleteAction },\n                { path: \"edit\", element: <EditEventPage />, action : manipulateEventAction },\n              ]\n            },\n            { path: \"new\", element: <NewEventPage />, action:manipulateEventAction },\n          ],\n        },\n      ],\n    },\n  ]);\n  return (\n    <>\n      <RouterProvider router={router} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}