{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\12-adv-starting-project\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport EventsPage from \"./pages/Events\";\nimport HomePage from \"./pages/Home\";\nimport EventDetailPage from \"./pages/EventDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRootLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \"/events\",\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 36\n        }, this),\n        loader: async () => {\n          const response = await fetch('http://localhost:8080/events');\n          if (!response.ok) {\n            //..\n          } else {\n            const resData = await response.json();\n            return resData.events;\n          }\n        }\n      }, {\n        path: \":eventId\",\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 42\n        }, this)\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \":eventId/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 47\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","EventsPage","HomePage","EventDetailPage","NewEventPage","EditEventPage","RootLayout","EventsRootLayout","jsxDEV","_jsxDEV","Fragment","_Fragment","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","loader","response","fetch","ok","resData","json","events","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/12-adv-starting-project/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport EventsPage from \"./pages/Events\";\nimport HomePage from \"./pages/Home\";\nimport EventDetailPage from \"./pages/EventDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRootLayout\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      children: [\n        { index: true, element: <HomePage /> },\n        {\n          path: \"/events\",\n          element: <EventsRootLayout />,\n          children: [\n            { index:true, element: <EventsPage />, loader:async()=>{\n              const response = await fetch('http://localhost:8080/events');\n\n              if (!response.ok) {\n                //..\n              } else {\n                const resData = await response.json();\n                return resData.events;\n              }\n            }},\n            { path: \":eventId\", element: <EventDetailPage /> },\n            { path: \"new\", element: <NewEventPage /> },\n            { path: \":eventId/edit\", element: <EditEventPage /> },\n          ],\n        },\n      ],\n    },\n  ]);\n  return (\n    <>\n      <RouterProvider router={router} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGd,mBAAmB,CAAC,CACjC;IACEe,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEN,OAAA,CAACH,UAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEN,OAAO,eAAEN,OAAA,CAACP,QAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACtC;MACEL,IAAI,EAAE,SAAS;MACfC,OAAO,eAAEN,OAAA,CAACF,gBAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC7BC,QAAQ,EAAE,CACR;QAAEC,KAAK,EAAC,IAAI;QAAEN,OAAO,eAAEN,OAAA,CAACR,UAAU;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAEG,MAAM,EAAC,MAAAA,CAAA,KAAS;UACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;UAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;YAChB;UAAA,CACD,MAAM;YACL,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YACrC,OAAOD,OAAO,CAACE,MAAM;UACvB;QACF;MAAC,CAAC,EACF;QAAEd,IAAI,EAAE,UAAU;QAAEC,OAAO,eAAEN,OAAA,CAACN,eAAe;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,EAClD;QAAEL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEN,OAAA,CAACL,YAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,EAC1C;QAAEL,IAAI,EAAE,eAAe;QAAEC,OAAO,eAAEN,OAAA,CAACJ,aAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC;IAEzD,CAAC;EAEL,CAAC,CACF,CAAC;EACF,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA,CAACT,cAAc;MAACa,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAClC,CAAC;AAEP;AAACU,EAAA,GAlCQjB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}