{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\All Projects\\\\Building a MultiPage SPA with ReactRouter\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from 'react';\nimport { json, useRouteLoaderData, redirect, defer, Await } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedData => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedData => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  // const response = await data.json();\n\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch the data'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nexport async function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError : true, message : 'Could not fetch data'}\n    // throw new Error(\"Could not fetch events\");\n    // throw { message: 'Could not fetch data'}\n\n    // throw new Response(JSON.stringify({message:'Could not fetch data'}),{\n    //   status:500,\n    // })\n\n    throw json({\n      message: \"Could not fetch data\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete the event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Suspense","json","useRouteLoaderData","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedData","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/All Projects/Building a MultiPage SPA with ReactRouter/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Suspense } from 'react';\r\nimport { json,useRouteLoaderData,redirect,defer,Await } from 'react-router-dom';\r\nimport EventItem from '../components/EventItem';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventDetailPage() {\r\n  const { event, events } = useRouteLoaderData('event-detail');\r\n  return (\r\n    <>\r\n    <Suspense fallback={<p style = {{textAlign : 'center'}}>Loading...</p>}>\r\n    <Await resolve={event}>\r\n      {(loadedData) => (<EventItem event = {loadedData}/>)}\r\n    </Await>\r\n    </Suspense>\r\n\r\n    <Suspense fallback={<p style = {{textAlign : 'center'}}>Loading...</p>}>\r\n    <Await resolve={events}>\r\n      {(loadedData) => (<EventsList events = {loadedData}/>)}\r\n    </Await>\r\n    </Suspense>\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loadEvent(id){\r\n  const response  = await fetch(\"http://localhost:8080/events/\" + id);\r\n  // const response = await data.json();\r\n\r\n  if(!response.ok){\r\n    throw json({message: 'Could not fetch the data'},{status:500});\r\n  }else{\r\n    const resData = await response.json();\r\n    return resData.event;\r\n  }\r\n}\r\n\r\nexport async function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // return { isError : true, message : 'Could not fetch data'}\r\n    // throw new Error(\"Could not fetch events\");\r\n    // throw { message: 'Could not fetch data'}\r\n\r\n    // throw new Response(JSON.stringify({message:'Could not fetch data'}),{\r\n    //   status:500,\r\n    // })\r\n\r\n    throw json({ message: \"Could not fetch data\" }, { status: 500 });\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nexport async function loader({request, params}){\r\n    const id = params.eventId;\r\n    return defer({\r\n      event : await loadEvent(id),\r\n      events : loadEvents()\r\n    })\r\n}\r\n\r\nexport async function action({request,params}){\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id,{\r\n    method : request.method\r\n  });\r\n  if(!response.ok){\r\n    throw json({message: 'Could not delete the event'}, {status:500});\r\n  }\r\n\r\n  return redirect('/events');\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}